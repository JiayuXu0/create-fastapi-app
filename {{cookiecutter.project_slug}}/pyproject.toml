[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_description}}"
authors = [
    {name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.author_email}}"}
]
readme = "README.md"
license = {text = "{{cookiecutter.license}}"}
requires-python = ">={{cookiecutter.python_version}}"
keywords = [
    "fastapi", "backend", "template", "enterprise", "rbac", "fastapi-template",
    "三层架构", "权限管理", "UV", "python", "async", "jwt", "JiayuXu0",
    "tortoise-orm", "{{cookiecutter.database_type}}", "docker", "ci-cd",
    "microservices", "api", "authentication", "authorization",
    "crud", "restful", "swagger", "openapi", "production-ready",
    "scalable", "secure", "modern", "clean-architecture"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.100.0",
    "tortoise-orm[asyncpg]>=0.20.0",
    "uvicorn[standard]>=0.23.0",
    "aerich>=0.7.2",
    "PyJWT>=2.8.0",
    "pydantic-settings>=2.0.0",
    "pydantic[email]>=2.0.0",
    "passlib[bcrypt]>=1.7.4",
    "loguru>=0.7.0",
    "argon2-cffi>=23.0.0",
    "python-multipart>=0.0.6",
    "httpx>=0.24.0",
    "apscheduler>=3.10.0",
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.28.0",
    "setuptools>=68.0.0",
    "slowapi>=0.1.9",
    "redis>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.3",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
]

[project.urls]
{% if cookiecutter.github_username != "yourusername" -%}
Homepage = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}"
Repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}.git"
"Bug Tracker" = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}/issues"
"Source Code" = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_slug}}"
{%- endif %}
"Template Source" = "https://github.com/JiayuXu0/FastAPI-Template"
"Original Documentation" = "http://fastapi.infyai.cn/"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/api", "src/core", "src/models", "src/schemas", "src/services", "src/repositories", "src/utils", "src/settings", "src/log", "src/handlers"]

[tool.hatch.envs.default]
python = "3.11"
dependencies = []

[tool.hatch.envs.default.env-vars]
PYTHONPATH = "src"

[tool.aerich]
tortoise_orm = "aerich_config.TORTOISE_ORM"
location = "./migrations"
src_folder = "./."

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
skip_glob = ["migrations/*"]

[tool.pylint.messages_control]
disable = ["C0103", "R0903", "W0613"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
exclude = [
    "migrations/",
    "tests/",
]

[[tool.mypy.overrides]]
module = [
    "tortoise.*",
    "aerich.*",
    "loguru.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.3",
    "pre-commit>=3.0.0",
]

docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-swagger-ui-tag>=0.6.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
    "mkdocstrings[python]>=0.25.0",
    "mkdocs-macros-plugin>=1.0.0",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-awesome-pages-plugin>=2.9.0",
    "mkdocs-redirects>=1.2.0",
    "pymdown-extensions>=10.0.0",
]
